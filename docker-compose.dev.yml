version: '3.8'

services:
  # Core Databases
  mongodb:
    image: mongo:7
    container_name: rhajaina-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: rhajaina
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongodb-init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - rhajaina-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: rhajaina-redis
    restart: unless-stopped
    command: redis-server --requirepass redispassword --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./infrastructure/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - rhajaina-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: rhajaina-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
      - ./infrastructure/qdrant/config.yaml:/qdrant/config/production.yaml:ro
    networks:
      - rhajaina-network
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Message Broker
  nats:
    image: nats:alpine
    container_name: rhajaina-nats
    restart: unless-stopped
    ports:
      - "4222:4222"    # Client connections
      - "8222:8222"    # HTTP monitoring
      - "6222:6222"    # Routing port for clustering
    command: 
      - "--jetstream"
      - "--store_dir=/data"
      - "--http_port=8222"
      - "--port=4222"
      - "--cluster_name=rhajaina-cluster"
    volumes:
      - nats_data:/data
    networks:
      - rhajaina-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Development and Admin Tools
  mongo-express:
    image: mongo-express:latest
    container_name: rhajaina-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - rhajaina-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: rhajaina-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:redispassword
      HTTP_USER: admin
      HTTP_PASSWORD: admin
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - rhajaina-network

  # NATS Monitoring (JetStream and Core NATS)
  nats-box:
    image: natsio/nats-box:latest
    container_name: rhajaina-nats-box
    restart: unless-stopped
    depends_on:
      nats:
        condition: service_healthy
    networks:
      - rhajaina-network
    command: 
      - "sleep"
      - "infinity"
    volumes:
      - ./scripts/nats-setup.sh:/setup.sh:ro

  # Application Services (for development)
  api-gateway:
    build:
      context: .
      dockerfile: services/api-gateway/Dockerfile.dev
    container_name: rhajaina-api-gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://admin:password@mongodb:27017/rhajaina?authSource=admin
      REDIS_URL: redis://:redispassword@redis:6379
      NATS_URL: nats://nats:4222
      QDRANT_URL: http://qdrant:6333
    volumes:
      - ./services/api-gateway/src:/app/src:ro
      - ./services/shared:/app/shared:ro
      - ./logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    networks:
      - rhajaina-network
    profiles:
      - services

  request-processor:
    build:
      context: .
      dockerfile: services/request-processor/Dockerfile.dev
    container_name: rhajaina-request-processor
    restart: unless-stopped
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://admin:password@mongodb:27017/rhajaina?authSource=admin
      REDIS_URL: redis://:redispassword@redis:6379
      NATS_URL: nats://nats:4222
      SERVICE_NAME: request-processor
    volumes:
      - ./services/request-processor/src:/app/src:ro
      - ./services/shared:/app/shared:ro
      - ./logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
    networks:
      - rhajaina-network
    profiles:
      - services

  think-engine:
    build:
      context: .
      dockerfile: services/think-engine/Dockerfile.dev
    container_name: rhajaina-think-engine
    restart: unless-stopped
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://admin:password@mongodb:27017/rhajaina?authSource=admin
      REDIS_URL: redis://:redispassword@redis:6379
      NATS_URL: nats://nats:4222
      SERVICE_NAME: think-engine
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
    volumes:
      - ./services/think-engine/src:/app/src:ro
      - ./services/shared:/app/shared:ro
      - ./logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
    networks:
      - rhajaina-network
    profiles:
      - services

  action-engine:
    build:
      context: .
      dockerfile: services/action-engine/Dockerfile.dev
    container_name: rhajaina-action-engine
    restart: unless-stopped
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://admin:password@mongodb:27017/rhajaina?authSource=admin
      REDIS_URL: redis://:redispassword@redis:6379
      NATS_URL: nats://nats:4222
      SERVICE_NAME: action-engine
    volumes:
      - ./services/action-engine/src:/app/src:ro
      - ./services/shared:/app/shared:ro
      - ./logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
    networks:
      - rhajaina-network
    profiles:
      - services

  response-engine:
    build:
      context: .
      dockerfile: services/response-engine/Dockerfile.dev
    container_name: rhajaina-response-engine
    restart: unless-stopped
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://admin:password@mongodb:27017/rhajaina?authSource=admin
      REDIS_URL: redis://:redispassword@redis:6379
      NATS_URL: nats://nats:4222
      SERVICE_NAME: response-engine
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      GOOGLE_AI_API_KEY: ${GOOGLE_AI_API_KEY}
    volumes:
      - ./services/response-engine/src:/app/src:ro
      - ./services/shared:/app/shared:ro
      - ./logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
    networks:
      - rhajaina-network
    profiles:
      - services

  context-manager:
    build:
      context: .
      dockerfile: services/context-manager/Dockerfile.dev
    container_name: rhajaina-context-manager
    restart: unless-stopped
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://admin:password@mongodb:27017/rhajaina?authSource=admin
      REDIS_URL: redis://:redispassword@redis:6379
      NATS_URL: nats://nats:4222
      SERVICE_NAME: context-manager
    volumes:
      - ./services/context-manager/src:/app/src:ro
      - ./services/shared:/app/shared:ro
      - ./logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
    networks:
      - rhajaina-network
    profiles:
      - services

  vector-db-service:
    build:
      context: .
      dockerfile: services/vector-db-service/Dockerfile.dev
    container_name: rhajaina-vector-db-service
    restart: unless-stopped
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://admin:password@mongodb:27017/rhajaina?authSource=admin
      REDIS_URL: redis://:redispassword@redis:6379
      NATS_URL: nats://nats:4222
      QDRANT_URL: http://qdrant:6333
      SERVICE_NAME: vector-db-service
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    volumes:
      - ./services/vector-db-service/src:/app/src:ro
      - ./services/shared:/app/shared:ro
      - ./logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    networks:
      - rhajaina-network
    profiles:
      - services

  file-service:
    build:
      context: .
      dockerfile: services/file-service/Dockerfile.dev
    container_name: rhajaina-file-service
    restart: unless-stopped
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://admin:password@mongodb:27017/rhajaina?authSource=admin
      REDIS_URL: redis://:redispassword@redis:6379
      NATS_URL: nats://nats:4222
      SERVICE_NAME: file-service
      UPLOAD_DIR: /app/uploads
    volumes:
      - ./services/file-service/src:/app/src:ro
      - ./services/shared:/app/shared:ro
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
    networks:
      - rhajaina-network
    profiles:
      - services

  # Frontend Development Server
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.dev
    container_name: rhajaina-frontend
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3000/api/v1
      REACT_APP_WS_URL: ws://localhost:3000
      CHOKIDAR_USEPOLLING: 'true'
    volumes:
      - ./frontend/src:/app/src:ro
      - ./frontend/public:/app/public:ro
      - /app/node_modules
    depends_on:
      - api-gateway
    networks:
      - rhajaina-network
    profiles:
      - frontend

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  qdrant_data:
    driver: local
  nats_data:
    driver: local

networks:
  rhajaina-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16